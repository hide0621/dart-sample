/*
名前付きコンストラクタは、以下のような場合に使用します：
クラスが複数の初期化方法を持つ場合。例えば、異なる数のパラメータを取るコンストラクタを定義することができます。
クラスのインスタンスを作成する際に、特定の設定や初期化を行いたい場合。
*/

class Point {
  int x;
  int y;

  // デフォルトコンストラクタ
  Point(this.x, this.y);

  // 下のコードはこれと同じ
  // ただしDartでは非null型のインスタンスフィールドは必ず初期化する必要がある
  // そのため、この方法ではエラーが発生する
  // Point.origin() {
  //   x = 0;
  //   y = 0;
  // }

  // 故に下のコードのように、初期化リスト（:の部分）を使って初期化する
  // 初期化リストを使えばコンストラクタの実行前に「:」以降の処理が先に実行され、
  // フィールドの初期化や親クラスのコンストラクタの呼び出し（super()のこと）を先に行うことができる

  // 名前付きコンストラクタ
  Point.origin()
      : x = 0,
        y = 0;
}

void main() {
  var p = Point(1, 2);
  var p2 = Point.origin();

  print('p.x: ${p.x}, p.y: ${p.y}');
  print('p2.x: ${p2.x}, p2.y: ${p2.y}');
}
